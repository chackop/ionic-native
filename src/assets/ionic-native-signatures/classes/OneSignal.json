{
  "name": "OneSignal",
  "members": [
    {
      "name": "OSInFocusDisplayOption",
      "description": "constants to use in inFocusDisplaying()",
      "params": [
      ]
    },
    {
      "name": "startInit",
      "description": "Start the initialization process. Once you are done configuring OneSignal, call the `endInit` function.",
      "params": [
        {
          "name": "appId",
          "description": "Your OneSignal app id",
          "type": "string",
          "optional": false
        },
        {
          "name": "googleProjectNumber",
          "description": "**ANDROID** - your Google project number; only required for Android GCM/FCM pushes.",
          "type": "string",
          "optional": false
        }
      ]
    },
    {
      "name": "handleNotificationReceived",
      "description": "Callback to run when a notification is received, whether it was displayed or not.",
      "params": [
      ]
    },
    {
      "name": "handleNotificationOpened",
      "description": "Callback to run when a notification is tapped on from the notification shade (**ANDROID**) or notificationcenter (**iOS**), or when closing an Alert notification shown in the app (if InAppAlert is enabled ininFocusDisplaying).",
      "params": [
      ]
    },
    {
      "name": "iOSSettings",
      "description": "**iOS** - Settings for iOS apps",
      "params": [
        {
          "name": "settings",
          "description": "kOSSettingsKeyAutoPrompt: boolean = true Auto prompt user for notification permissions. kOSSettingsKeyInAppLaunchURL: boolean = false Launch notifications with a launch URL as an in app webview.",
          "type": "",
          "optional": false
        }
      ]
    },
    {
      "name": "endInit",
      "description": "Must be called after `startInit` to complete initialization of OneSignal.",
      "params": [
      ]
    },
    {
      "name": "getTags",
      "description": "Retrieve a list of tags that have been set on the user from the OneSignal server.**Quirk**: You must wait for `getTags` to resolve before calling it again, as the plugin will only process the last method call and discard any previous ones.",
      "params": [
      ]
    },
    {
      "name": "getIds",
      "description": "Lets you retrieve the OneSignal user id and device token.Your handler is called after the device is successfully registered with OneSignal.",
      "params": [
      ]
    },
    {
      "name": "sendTag",
      "description": "Tag a user based on an app event of your choosing so later you can create segments on [onesignal.com](https://onesignal.com/) to target these users.Recommend using sendTags over sendTag if you need to set more than one tag on a user at a time.",
      "params": [
        {
          "name": "Key",
          "description": "of your choosing to create or update.",
          "type": "string",
          "optional": false
        },
        {
          "name": "Value",
          "description": "to set on the key. NOTE: Passing in a blank String deletes the key, you can also call deleteTag.",
          "type": "string",
          "optional": false
        }
      ]
    },
    {
      "name": "sendTags",
      "description": "Tag a user based on an app event of your choosing so later you can create segments on [onesignal.com](https://onesignal.com/) to target these users.Recommend using sendTags over sendTag if you need to set more than one tag on a user at a time.",
      "params": [
        {
          "name": "Pass",
          "description": "a json object with key/value pairs like: {key: \"value\", key2: \"value2\"}",
          "type": "string",
          "optional": false
        }
      ]
    },
    {
      "name": "deleteTag",
      "description": "Deletes a tag that was previously set on a user with `sendTag` or `sendTags`. Use `deleteTags` if you need to delete more than one.",
      "params": [
        {
          "name": "Key",
          "description": "to remove.",
          "type": "string",
          "optional": false
        }
      ]
    },
    {
      "name": "deleteTags",
      "description": "Deletes tags that were previously set on a user with `sendTag` or `sendTags`.",
      "params": [
        {
          "name": "Keys",
          "description": "to remove.",
          "type": "Array<string>",
          "optional": false
        }
      ]
    },
    {
      "name": "registerForPushNotifications",
      "description": "Call this when you would like to prompt an iOS user to accept push notifications with the default system prompt.Only works if you set `kOSSettingsAutoPrompt` to `false` in `iOSSettings`",
      "params": [
      ]
    },
    {
      "name": "enableVibrate",
      "description": "Warning:Only applies to Android and Amazon. You can call this from your UI from a button press for example to give your user's options for your notifications.By default OneSignal always vibrates the device when a notification is displayed unless the device is in a total silent mode.Passing false means that the device will only vibrate lightly when the device is in it's vibrate only mode.",
      "params": [
        {
          "name": "false",
          "description": "to disable vibrate, true to re-enable it.",
          "type": "boolean",
          "optional": false
        }
      ]
    },
    {
      "name": "enableSound",
      "description": "Warning:Only applies to Android and Amazon. You can call this from your UI from a button press for example to give your user's options for your notifications.By default OneSignal plays the system's default notification sound when the device's notification system volume is turned on.Passing false means that the device will only vibrate unless the device is set to a total silent mode.",
      "params": [
        {
          "name": "false",
          "description": "to disable sound, true to re-enable it.",
          "type": "boolean",
          "optional": false
        }
      ]
    },
    {
      "name": "inFocusDisplaying",
      "description": "Setting to control how OneSignal notifications will be shown when one is received while your app is in focus. By default this is set to inAppAlert, which can be helpful during development.",
      "params": [
        {
          "name": "displayOption",
          "description": "",
          "type": "DisplayType",
          "optional": false
        }
      ]
    },
    {
      "name": "setSubscription",
      "description": "You can call this method with false to opt users out of receiving all notifications through OneSignal.You can pass true later to opt users back into notifications.",
      "params": [
        {
          "name": "enable",
          "description": "",
          "type": "boolean",
          "optional": false
        }
      ]
    },
    {
      "name": "postNotification",
      "description": "",
      "params": [
        {
          "name": "Parameters",
          "description": "see POST [documentation](https://documentation.onesignal.com/v2.0/docs/notifications-create-notification)",
          "type": "notificationObj",
          "optional": false
        }
      ]
    },
    {
      "name": "promptLocation",
      "description": "Prompts the user for location permission to allow geotagging based on the \"Location radius\" filter on the OneSignal dashboard.",
      "params": [
      ]
    },
    {
      "name": "syncHashedEmail",
      "description": "",
      "params": [
        {
          "name": "email",
          "description": "",
          "type": "string",
          "optional": false
        }
      ]
    },
    {
      "name": "setLogLevel",
      "description": "Enable logging to help debug if you run into an issue setting up OneSignal.The logging levels are as follows: 0 = None, 1= Fatal, 2 = Errors, 3 = Warnings, 4 = Info, 5 = Debug, 6 = VerboseThe higher the value the more information is shown.",
      "params": [
        {
          "name": "contains",
          "description": "two properties: logLevel (for console logging) and visualLevel (for dialog messages)",
          "type": "loglevel",
          "optional": false
        }
      ]
    }
  ]
}
